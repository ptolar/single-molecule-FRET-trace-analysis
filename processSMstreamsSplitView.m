% calculate single molecule FRET traces

%% Setup

% requires background images in donor, fret and acceptor channels in the
% workspace (dbckg, fbckg, abckg) as generated by
% generateSMbackgroundStreamsSplitView.m

% requires alignment tform generated by find_alignment from multispeck bead
% images

% folder with input image streams
path = '/Users/ptolar/Documents/Large Data/Raj/IgM 526 on IgM/';

% basename for image file names
basename = 'IgM 526 stream';

% number for the image stream to analyse
fileNum = 1; 

% path to save output
savingPath = '/Users/ptolar/Documents/Large Data/Raj/IgM 526 on IgM/';

% save results or not?
saveData = 0;

% specify acceptor and donor excitation frames within stream
dframes = 2:301;
aframes = 1;

% thresholds for spot detection in donor and acceptor excitation channels
th1 = 5;
th2 = 3;

gamma = 1.8;  % conversion of donor to acceptor fluorescence
alpha = 0.09; % donor bleedthrough into FRET
beta  = 0.08; % direct acceptor excitation

% pixel size of split-image field of view (half of the chip)
imsize = [256, 512];

% specify columns and rows to keep (crop out the rest)
cropx = 1:256;
cropy = 1:512;

% set up spot detection
spotsize = 2;
maxdist  = 1.5;

%% Read images
% read and align D/F stream, subtract background
stream = squeeze(read_image_sequence([path, basename, num2str(fileNum),'.tif']));
d = stream(:,1:imsize(1),dframes)-dbckg;
d = imwarp(d, tform, 'OutputView', imref2d(size(d)));

a = stream(:,imsize(1)+1:end,aframes)-abckg;
f = stream(:,imsize(1)+1:end,dframes)-fbckg;

% crop
d = d(cropy, cropx, :);
f = f(cropy, cropx, :);
a = a(cropy, cropx, :);


%% find colocalised molecules
spots = analyzeSM(d(:,:,1)+f(:,:,1)./gamma, a, th1, th2, maxdist, spotsize);

% get traces of colocalised molecules
% traces contain donor, fret intensities and calculated FRET in columns
% 1,2, and 3 respectively
traces = zeros(size(d,3), 3, size(spots.colocalized,1));
for sp = 1:size(spots.colocalized,1)
    
    for fr = 1:size(d,3)
        x = spots.colocalized(sp, 1);
        y = spots.colocalized(sp, 2);
        traces(fr,1,sp) = mean2(d(y-2:y+2, x-2:x+2, fr));
        traces(fr,2,sp) = mean2(f(y-2:y+2, x-2:x+2, fr));
    end
    
    % calculate fret
    traces(:,3,sp) = (traces(:,2,sp) - alpha*traces(:,1,sp) - beta*repmat(spots.colocalized(sp, 6), [size(d,3),1]))./ ...
        (traces(:,2,sp) - alpha*traces(:,1,sp) - beta*repmat(spots.colocalized(sp, 6), [size(d,3),1]) + gamma*traces(:,1,sp));

end

% save
if saveData == 1;
    if ~isdir(savingPath)
        mkdir(savingPath);
    end
    
    if exist([savingPath, 'results', num2str(fileNum), '.mat'], 'file')
        response = questdlg('Do you want to overwrite?', 'Results already exist!', 'Yes', 'No', 'No');
        switch response
            case 'Yes'
            save([savingPath, 'results', num2str(fileNum), '.mat'], 'spots', 'traces');
        end
    else      
        save([savingPath, 'results', num2str(fileNum), '.mat'], 'spots', 'traces');
    end
    
end

%% show image
% requires that MIJ is already open and running

MIJ.createImage('donor', d, 1);
MIJ.createImage('fret', f, 1);
MIJ.createImage('acceptor', repmat(a,[1,1,size(d,3)]), 1);
MIJ.run('Merge Channels...', 'red=fret green=donor blue=acceptor gray=*None* create');

% show test donor-fret image for set up
% testdf = d(:,:,1)+f(:,:,1)./gamma;
% MIJ.createImage('donor-fret', testdf, 1);
% testa = a(:,:,1);
% MIJ.createImage('acceptor', testa, 1);
% processim

%% label spot and show traces

% for spot number sp
sp = 19
rect = [spots.colocalized(sp,1)-5, spots.colocalized(sp,1)+5, spots.colocalized(sp,1)+5, spots.colocalized(sp,1)-5; ...
spots.colocalized(sp,2)-5, spots.colocalized(sp,2)-5, spots.colocalized(sp,2)+5, spots.colocalized(sp,2)+5];

MIJ.setRoi(rect,2)

plot(traces(:,1,sp), 'g')
ylim([-40, 150])
hold on
plot(traces(:,2,sp), 'r')
plot(traces(:,3,sp)*100, 'b')
plot(repmat(spots.colocalized(sp,6), [size(traces,1),1]), 'k')
grid on
hold off

% prepare selected trace data for copy and paste
trace = cat(2, [0:0.03:0.03*(size(traces,1)-1)]', traces(:,:,sp)); % 30 ms time resolution



%% checking correction factors
% fret intensity in  donor spots 
for sp = 1:size(spots.spots1,1)
    x = spots.spots1(sp, 1);
    y = spots.spots1(sp, 2);
    spots.spots1(sp,3) = mean2(d(y-2:y+2, x-2:x+2, 1));
    spots.spots1(sp,5) = mean2(f(y-2:y+2, x-2:x+2, 1));
    
end

% fret intensity for all accceptor spots
for sp = 1:size(spots.spots2,1)
    x = spots.spots2(sp, 1);
    y = spots.spots2(sp, 2);
    spots.spots2(sp,5) = mean2(f(y-2:y+2, x-2:x+2, 1));
    
end

% plot scatter plots 
indNotCol = spots.spots1(:,4)==0;
figure
scatter(spots.spots1(indNotCol, 3), spots.spots1(indNotCol, 5) - alpha*spots.spots1(indNotCol, 3), 'DisplayName', 'd vs corrected f not colocalized');
hold on 
indNotCol = spots.spots2(:,4)==0;
scatter(spots.spots2(indNotCol, 3), spots.spots2(indNotCol, 5) - beta*spots.spots2(indNotCol, 3), 'DisplayName', 'a vs corrected f not colocalized');


